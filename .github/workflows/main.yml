name: Build and Release Extension

on:
  push:
    tags-ignore:
      - 'dev'  # Ignore the dev tag

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      # Step 3: Extract version from tag
      - name: Extract version from tag
        id: extract_version
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          VERSION=${VERSION#v}  # Remove leading 'v' if present
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      # Step 4: Install jq
      - name: Install jq
        run: sudo apt-get install -y jq

      # Step 5: Update package.json version to match the tag version
      - name: Update package.json version
        run: |
          jq --arg v "$VERSION" '.version = $v' package.json > tmp.json && mv tmp.json package.json

      # Step 6: Install dependencies
      - name: Install dependencies
        run: npm install

      # Step 7: Build the extension using esbuild
      - name: Build the extension
        run: npm run build

      # Step 8: Package the extension into a .vsix file using vsce
      - name: Package the VSCode extension (.vsix)
        run: npm run buildtag
      
      - name: List files after packaging
        run: ls -al

      # Step 9: Rename the .vsix file to include the version
      - name: Rename .vsix file
        run: |
          FILE=$(ls *.vsix)
          if [ "$FILE" != "mythicscribe-${{ env.VERSION }}.vsix" ]; then
            mv "$FILE" "mythicscribe-${{ env.VERSION }}.vsix"
          else
            echo "File is already named correctly: $FILE"
          fi

      # Step 10: Create a release on GitHub based on the tag and upload the .vsix file
      - name: Create release and upload .vsix
        uses: softprops/action-gh-release@c95fe1489396fe8a9eb87c0abf8aa5b2ef267fda
        with:
          files: './mythicscribe-${{ env.VERSION }}.vsix'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
